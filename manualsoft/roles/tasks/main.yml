---

    - name: Create directory for Java installation
      ansible.builtin.file:
        path: /apps/testuser
        state: directory

    - name: Copy Java tarball to remote host
      ansible.builtin.copy:
        src: /path/to/java.tar.gz  # Update this path with the actual path to the Java tarball
        dest: /tmp/java.tar.gz

    - name: Extract Java tarball
      ansible.builtin.unarchive:
        src: /tmp/java.tar.gz
        dest: /apps/testuser
        remote_src: yes
        creates: /apps/testuser/jdk  # Adjust this path based on the contents of the tarball

    - name: Set JAVA_HOME environment variable
      ansible.builtin.lineinfile:
        dest: /etc/profile
        line: 'export JAVA_HOME=/apps/testuser/jdk'
        state: present
        create: yes

    - name: Update PATH environment variable
      ansible.builtin.lineinfile:
        dest: /etc/profile
        line: 'export PATH=$JAVA_HOME/bin:$PATH'
        state: present
        create: yes

---

    - name: Install required dependencies
      ansible.builtin.package:
        name: ['gcc', 'make', 'openssl-devel', 'libffi-devel', 'zlib-devel']

#    - name: Download Python source code
#      ansible.builtin.get_url:
#        url: "https://www.python.org/ftp/python/3.10.11/Python-3.10.11.tgz"
#        dest: "/tmp/Python-3.10.11.tgz"

    - name: Copy python tarball to remote host
      ansible.builtin.copy:
        src: /path/to/java.tar.gz  # Update this path with the actual path to the Java tarball
        dest: /tmp/java.tar.gz

    - name: Extract Python source code
      ansible.builtin.unarchive:
        src: "/tmp/Python-3.10.11.tgz"
        dest: "/tmp"

    - name: Configure Python build
      ansible.builtin.command: |
        cd /tmp/Python-3.10.11 && \
        ./configure --prefix=/usr/local --enable-optimizations

    - name: Build and install Python
      ansible.builtin.command: |
        cd /tmp/Python-3.10.11 && \
        make && \
        make install
        register: make_result
        ignore_errors: true

    - name: Display make and make install output
      ansible.builtin.debug:
        msg: "{{ make_result.stdout }}"
      when: make_result is failed

    - name: Create multiple paths
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - /path/to/directory1
        - /path/to/directory2
        - /path/to/directory3

      ansible.builtin.file:
        path: /path/to/your/directory  # Specify the path to the directory
        owner: user123  # Specify the desired owner
        group: user123  # Specify the desired group
        recurse: yes